<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Mumms Automation test suite" duration-ms="2468" started-at="2016-03-10T01:07:13Z" finished-at="2016-03-10T01:07:16Z">
    <groups>
    </groups>
    <test name="chromeWindowsLocal" duration-ms="2468" started-at="2016-03-10T01:07:13Z" finished-at="2016-03-10T01:07:16Z">
      <class name="com.Mumms.scripts.Reports">
        <test-method status="PASS" signature="beforeSuite(org.testng.ITestContext, java.lang.String, java.lang.String)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="beforeSuite" is-config="true" duration-ms="169" started-at="2016-03-09T19:07:13Z" finished-at="2016-03-09T19:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ed2d9cb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Sequential]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Regression]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="FAIL" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="beforeTest" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:13Z" finished-at="2016-03-09T19:07:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[selenium]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[46.0]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[local]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[windows 7]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: D:\usr\bin\google-chrome]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\usr\bin\google-chrome
	at com.google.common.base.Preconditions.checkState(Preconditions.java:200)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:138)
	at com.automation.accelerators.TestEngineWeb.setWebDriverForLocal(TestEngineWeb.java:255)
	at com.automation.accelerators.TestEngineWeb.beforeTest(TestEngineWeb.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:391)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:16Z" finished-at="2016-03-09T19:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="login(java.lang.String)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="login" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:16Z" finished-at="2016-03-09T19:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="SKIP" signature="testGenerateVisitReport(java.util.Hashtable)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="testGenerateVisitReport" duration-ms="0" started-at="2016-03-09T19:07:16Z" data-provider="getTestDataFor_visitReport" finished-at="2016-03-09T19:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{toDate_Month=2.0, ReportingPeriod=02/10/16 - 03/02/16, Program=Palliative Care, fromDate_Month=1.0, fromDate_Year=2016.0, fromDate_Day=10.0, VisitType_Report=DIRECT_CARE, Program_Report=Palliative Care, RunMode=Y, ReportName=Visit Report, toDate_Day=2.0, VisitType=Direct Care, toDate_Year=2016.0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenerateVisitReport -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:16Z" finished-at="2016-03-09T19:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="logOut()[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="logOut" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:16Z" finished-at="2016-03-09T19:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="FAIL" signature="afterTest(java.lang.String)[pri:0, instance:com.Mumms.scripts.Reports@649bec2e]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-03-09T19:07:16Z" finished-at="2016-03-09T19:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.automation.accelerators.TestEngineWeb.afterTest(TestEngineWeb.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:220)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:773)
	at org.testng.TestRunner.run(TestRunner.java:623)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:391)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.Mumms.scripts.Reports -->
    </test> <!-- chromeWindowsLocal -->
  </suite> <!-- Mumms Automation test suite -->
</testng-results>
